}else{
map[[genreName]] = map[[genreName]]+score
}
print(as.list(map))
if(is.null(mapForDecade[[genreName]])){
mapForDecade[[genreName]]=score
}else{
mapForDecade[[genreName]] = mapForDecade[[genreName]]+score
}
}
}else{
noGenresError = append(noGenresError,list(append(name,linkNest)))
}
}else{
noArtistError = append(noArtistError,list(append(name,linkNest)))
}
}else{
statusError=append(statusError,list(append(name,linkNest)))
}
}
assign(as.character(year),as.data.frame(as.list(map)))
write.table(as.data.frame(as.list(map)), file = paste(as.name(year),"Genres.csv",sep=''),sep=",",row.names=FALSE)
#if next year it changes the decade
if( (year+1)%%10 == 0){
assign(paste(as.character(year-9),"s",sep=''),as.data.frame(as.list(mapForDecade)))
write.table(as.data.frame(as.list(mapForDecade)), file = paste(as.name(year-9),"sGenres.csv",sep=''),sep=",",row.names=FALSE)
}
}
startYear=2000
for(year in startYear:2010){
print(year)
map <- new.env(hash=T, parent=emptyenv())#set hashmap of genres
#at the beginning of each decade reset the map of genresForDecade
if( year%%10 == 0){
mapForDecade = new.env(hash = T,parent = emptyenv())
}
tmp<-assign(paste("artist",year,sep=''),read.csv(paste("C:/wamp/www/viz/project3/app/data/artistsByYear/",year,"artist.csv",sep=''), stringsAsFactors=FALSE))
namesId = tmp[,'Artist']
#==========================for each artist find his genres
baseLinkNest<-'http://developer.echonest.com/api/v4/artist/search?api_key='
for(name in namesId){
apiKNest<-nestKeys[1]
nestKeys=append(nestKeys[-1],nestKeys[1]) # rotate keys
tmpName<-gsub(" ", "%20", name)
tmpName<- deUnicodefy(tmpName)
linkNest<-paste(baseLinkNest,apiKNest,'&format=json','&name=',tmpName,'&bucket=genre&results=1', sep = "")
jsonNest <- getURL(linkNest)
objNest <- fromJSON(jsonNest)
#print(objNest)
#if there is a response, for each genre add a a score which is
#the popularity of the artist
if(objNest$response$status$code==0){
if( length(objNest$response$artists)>0){
if(length(objNest$response$artists[[1]]$genres) > 0){
for(i in 1:length(objNest$response$artists[[1]]$genres)){
genreName<- objNest$response$artists[[1]]$genres[[i]]$name
score = tmp[tmp$Artist==name,'sum']
if(is.null(map[[genreName]])){
map[[genreName]] = score
}else{
map[[genreName]] = map[[genreName]]+score
}
print(as.list(map))
if(is.null(mapForDecade[[genreName]])){
mapForDecade[[genreName]]=score
}else{
mapForDecade[[genreName]] = mapForDecade[[genreName]]+score
}
}
}else{
noGenresError = append(noGenresError,list(append(name,linkNest)))
}
}else{
noArtistError = append(noArtistError,list(append(name,linkNest)))
}
}else{
statusError=append(statusError,list(append(name,linkNest)))
}
}
assign(as.character(year),as.data.frame(as.list(map)))
write.table(as.data.frame(as.list(map)), file = paste(as.name(year),"Genres.csv",sep=''),sep=",",row.names=FALSE)
#if next year it changes the decade
if( (year+1)%%10 == 0){
assign(paste(as.character(year-9),"s",sep=''),as.data.frame(as.list(mapForDecade)))
write.table(as.data.frame(as.list(mapForDecade)), file = paste(as.name(year-9),"sGenres.csv",sep=''),sep=",",row.names=FALSE)
}
}
startYear=2000
for(year in startYear:2010){
print(year)
map <- new.env(hash=T, parent=emptyenv())#set hashmap of genres
#at the beginning of each decade reset the map of genresForDecade
if( year%%10 == 0){
mapForDecade = new.env(hash = T,parent = emptyenv())
}
tmp<-assign(paste("artist",year,sep=''),read.csv(paste("C:/wamp/www/viz/project3/app/data/artistsByYear/",year,"artist.csv",sep=''), stringsAsFactors=FALSE))
namesId = tmp[,'Artist']
#==========================for each artist find his genres
baseLinkNest<-'http://developer.echonest.com/api/v4/artist/search?api_key='
for(name in namesId){
apiKNest<-nestKeys[1]
nestKeys=append(nestKeys[-1],nestKeys[1]) # rotate keys
tmpName<-gsub(" ", "%20", name)
tmpName<- deUnicodefy(tmpName)
linkNest<-paste(baseLinkNest,apiKNest,'&format=json','&name=',tmpName,'&bucket=genre&results=1', sep = "")
jsonNest <- getURL(linkNest)
objNest <- fromJSON(jsonNest)
#print(objNest)
#if there is a response, for each genre add a a score which is
#the popularity of the artist
if(objNest$response$status$code==0){
if( length(objNest$response$artists)>0){
if(length(objNest$response$artists[[1]]$genres) > 0){
for(i in 1:length(objNest$response$artists[[1]]$genres)){
genreName<- objNest$response$artists[[1]]$genres[[i]]$name
score = tmp[tmp$Artist==name,'sum']
if(is.null(map[[genreName]])){
map[[genreName]] = score
}else{
map[[genreName]] = map[[genreName]]+score
}
print(as.list(map))
if(is.null(mapForDecade[[genreName]])){
mapForDecade[[genreName]]=score
}else{
mapForDecade[[genreName]] = mapForDecade[[genreName]]+score
}
}
}else{
noGenresError = append(noGenresError,list(append(name,linkNest)))
}
}else{
noArtistError = append(noArtistError,list(append(name,linkNest)))
}
}else{
statusError=append(statusError,list(append(name,linkNest)))
}
}
assign(as.character(year),as.data.frame(as.list(map)))
write.table(as.data.frame(as.list(map)), file = paste(as.name(year),"Genres.csv",sep=''),sep=",",row.names=FALSE)
#if next year it changes the decade
if( (year+1)%%10 == 0){
assign(paste(as.character(year-9),"s",sep=''),as.data.frame(as.list(mapForDecade)))
write.table(as.data.frame(as.list(mapForDecade)), file = paste(as.name(year-9),"sGenres.csv",sep=''),sep=",",row.names=FALSE)
}
}
startYear=2000
for(year in startYear:2010){
print(year)
map <- new.env(hash=T, parent=emptyenv())#set hashmap of genres
#at the beginning of each decade reset the map of genresForDecade
if( year%%10 == 0){
mapForDecade = new.env(hash = T,parent = emptyenv())
}
tmp<-assign(paste("artist",year,sep=''),read.csv(paste("C:/wamp/www/viz/project3/app/data/artistsByYear/",year,"artist.csv",sep=''), stringsAsFactors=FALSE))
namesId = tmp[,'Artist']
#==========================for each artist find his genres
baseLinkNest<-'http://developer.echonest.com/api/v4/artist/search?api_key='
for(name in namesId){
apiKNest<-nestKeys[1]
nestKeys=append(nestKeys[-1],nestKeys[1]) # rotate keys
tmpName<-gsub(" ", "%20", name)
tmpName<- deUnicodefy(tmpName)
linkNest<-paste(baseLinkNest,apiKNest,'&format=json','&name=',tmpName,'&bucket=genre&results=1', sep = "")
jsonNest <- getURL(linkNest)
objNest <- fromJSON(jsonNest)
#print(objNest)
#if there is a response, for each genre add a a score which is
#the popularity of the artist
if(objNest$response$status$code==0){
if( length(objNest$response$artists)>0){
if(length(objNest$response$artists[[1]]$genres) > 0){
for(i in 1:length(objNest$response$artists[[1]]$genres)){
genreName<- objNest$response$artists[[1]]$genres[[i]]$name
score = tmp[tmp$Artist==name,'sum']
if(is.null(map[[genreName]])){
map[[genreName]] = score
}else{
map[[genreName]] = map[[genreName]]+score
}
#print(as.list(map))
if(is.null(mapForDecade[[genreName]])){
mapForDecade[[genreName]]=score
}else{
mapForDecade[[genreName]] = mapForDecade[[genreName]]+score
}
}
}else{
noGenresError = append(noGenresError,list(append(name,linkNest)))
}
}else{
noArtistError = append(noArtistError,list(append(name,linkNest)))
}
}else{
statusError=append(statusError,list(append(name,linkNest)))
}
}
assign(as.character(year),as.data.frame(as.list(map)))
write.table(as.data.frame(as.list(map)), file = paste(as.name(year),"Genres.csv",sep=''),sep=",",row.names=FALSE)
#if next year it changes the decade
if( (year+1)%%10 == 0){
assign(paste(as.character(year-9),"s",sep=''),as.data.frame(as.list(mapForDecade)))
write.table(as.data.frame(as.list(mapForDecade)), file = paste(as.name(year-9),"sGenres.csv",sep=''),sep=",",row.names=FALSE)
}
}
View(`2000s`)
sort(`2000s`)
sort(`2000s`,decreasing = FALSE)
sort(`2000s`,decreasing = TRUE)
View(artist1949)
setwd("C:/wamp/www/viz/project3/app/Rscripts")
singleString <- paste(readLines("./../data/artistStaticData.js"), collapse=" ")
singleString <- paste(readLines("/../data/artistStaticData.js"), collapse=" ")
singleString <- paste(readLines("/../data/artistsStaticData.js"), collapse=" ")
singleString <- paste(readLines("../data/artistsStaticData.js"), collapse=" ")
a=strsplit(singleString,'=')
a[0]
a[[1]]
?strsplit
a[[2]]
a[[1]][1]
json=strsplit(singleString,'=')[[1]][2]
objNest <- fromJSON(json)
library('rjson')
json=strsplit(singleString,'=')[[1]][2]
objNest <- fromJSON(json)
print(objNest)
objNest <- fromJSON(json)
length(objNest)
obj <- fromJSON(json)
rm(objNest)
rm(a)
sum = 0
for(i in length(obj)){
sum = sum+ objNest[[i]]$value
}
for(i in length(obj)){
sum = sum+ obj[[i]]$value
}
sum = 0
for(i in length(obj)){
sum = sum + as.numeric(obj[[i]]$value)
}
print(obj)
sum = 0
for(i in length(obj)){
sum = sum + as.numeric(obj[[i]]$value)
}
sum = 0
for(i in length(obj)){
sum = sum + as.numeric(obj[[i]]$value)
print(sum)
}
for(i in length(obj)){
print(i)
sum = sum + as.numeric(obj[[i]]$value)
print(sum)
}
sum = 0
for(i in 1,length(obj)){
sum = sum + as.numeric(obj[[i]]$value)
}
sum = 0
for(i in 1:length(obj)){
sum = sum + as.numeric(obj[[i]]$value)
}
sum = list()
sum=[]
sum=c()
sum[1]
sum[1]=1
sum[2]=2
sum
print(obj)
map <- new.env(hash=T, parent=emptyenv())#set hashmap of genres
for(i in 1:length(obj)){
if(is.null(map[[obj[[i]]$date]])){
map[[obj[[i]]$date]] = as.numeric(obj[[i]]$value)
}else{
map[[obj[[i]]$date]] = map[[obj[[i]]$date]] + as.numeric(obj[[i]]$value)
}
}
print(map)
print(list(map))
print(as.list(map))
for(i in 1:length(obj)){
obj[[i]]$value =obj[[i]]$value/map[[obj[[i]]$date]]
}
for(i in 1:length(obj)){
obj[[i]]$value =as.numeric(obj[[i]]$value)/map[[obj[[i]]$date]]
}
print(obj)
#print(obj)
print(obj)
a<-toJSON(obj)
write(a, "test.json")
singleString <- paste(readLines("../data/artistsStaticData.js"), collapse=" ")
json=strsplit(singleString,'=')[[1]][2]
obj <- fromJSON(json)
map <- new.env(hash=T, parent=emptyenv())#set hashmap of genres
for(i in 1:length(obj)){
if(is.null(map[[obj[[i]]$date]])){
map[[obj[[i]]$date]] = as.numeric(obj[[i]]$value)
}else{
map[[obj[[i]]$date]] = map[[obj[[i]]$date]] + as.numeric(obj[[i]]$value)
}
}
for(i in 1:length(obj)){
obj[[i]]$value =as.numeric(obj[[i]]$value)/map[[obj[[i]]$date]]*100
}
a<-toJSON(obj)
write(a, "test.json")
map <- new.env(hash=T, parent=emptyenv())#set hashmap of genres
for(i in 1:length(obj)){
if(is.null(map[[obj[[i]]$date]])){
map[[obj[[i]]$date]] = as.numeric(obj[[i]]$value)
}else{
map[[obj[[i]]$date]] = map[[obj[[i]]$date]] + as.numeric(obj[[i]]$value)
}
}
print(as.list(map))
`1940sGenres` <- read.csv("C:/wamp/www/viz/project3/app/data/genresByDecade/1940sGenres.csv", header=FALSE)
View(`1940sGenres`)
`1940sGenres` <- read.csv("C:/wamp/www/viz/project3/app/data/genresByDecade/1940sGenres.csv", header=FALSE)
`1950sGenres` <- read.csv("C:/wamp/www/viz/project3/app/data/genresByDecade/1950sGenres.csv", header=FALSE)
`1960sGenres` <- read.csv("C:/wamp/www/viz/project3/app/data/genresByDecade/1960sGenres.csv", header=FALSE)
`1970sGenres` <- read.csv("C:/wamp/www/viz/project3/app/data/genresByDecade/1970sGenres.csv", header=FALSE)
`1980sGenres` <- read.csv("C:/wamp/www/viz/project3/app/data/genresByDecade/1980sGenres.csv", header=FALSE)
`1990sGenres` <- read.csv("C:/wamp/www/viz/project3/app/data/genresByDecade/1990sGenres.csv", header=FALSE)
`2000sGenres` <- read.csv("C:/wamp/www/viz/project3/app/data/genresByDecade/2000sGenres.csv", header=FALSE)
View(`1940sGenres`)
`1940sGenres`$V1
`1940sGenres`$V1 + `1950sGenres`$V1
append(`1940sGenres`$V1,`1950sGenres`$V1)
View(`1950sGenres`)
`1950sGenres`$V1
`1940sGenres`$V1
c(`1940sGenres`$V1,`1950sGenres`$V1)
`1940sGenres`$V1
`1940sGenres`$V1
c(`1940sGenres`$V1)
`1940sGenres`$V1
`1940sGenres`['V1']
c(`1940sGenres`['V1'])
c(`1940sGenres`['V1'],`1950sGenres`['V1'])
c(`1940sGenres`['V1'],`1950sGenres`['V1'],`1960sGenres`['V1'],`1970sGenres`['V1'],`1980sGenres`['V1'],`1990sGenres`['V1'],`2000sGenres`)
c(`1940sGenres`['V1'],`1950sGenres`['V1'],`1960sGenres`['V1'],`1970sGenres`['V1'],`1980sGenres`['V1'],`1990sGenres`['V1'],`2000sGenres`['V1'])
unique(c(`1940sGenres`['V1'],`1950sGenres`['V1'],`1960sGenres`['V1'],`1970sGenres`['V1'],`1980sGenres`['V1'],`1990sGenres`['V1'],`2000sGenres`['V1']))
`1940sGenres`['V1']
View(`1940sGenres`)
`1940sGenres`['V1'][1:10]
`1940sGenres`[1:10,'V1']
unique(c(`1940sGenres`[1:10,'V1'],`1950sGenres`[1:10,'V1'],`1960sGenres`[1:10,'V1'],`1970sGenres`[1:10,'V1'],`1980sGenres`[1:10,'V1'],`1990sGenres`[1:10,'V1'],`2000sGenres`[1:10,'V1']))
`2000sGenres`[1:10,'V1']
`1990sGenres`[1:10,'V1']
`1980sGenres`[1:10,'V1']
`1970sGenres`[1:10,'V1']
`1960sGenres`[1:10,'V1']
`1950sGenres`[1:10,'V1']
unique(c(`1940sGenres`[1:10,'V1'],`1950sGenres`[1:10,'V1'],`1960sGenres`[1:10,'V1'],`1970sGenres`[1:10,'V1'],`1980sGenres`[1:10,'V1'],`1990sGenres`[1:10,'V1'],`2000sGenres`[1:10,'V1']))
c(`1940sGenres`[1:10,'V1'],`1950sGenres`[1:10,'V1'],`1960sGenres`[1:10,'V1'],`1970sGenres`[1:10,'V1'],`1980sGenres`[1:10,'V1'],`1990sGenres`[1:10,'V1'],`2000sGenres`[1:10,'V1'])
`1950sGenres`[1:10,'V1']
c(`1940sGenres`[1:10,'V1']
)
c(`1940sGenres`[1:10,'V1']['V1'])
c(`1940sGenres`[1:10,'V1'][1])
c(`1940sGenres`[1:10,'V1']$V1)
c(a=`1940sGenres`[1:10,'V1'])
c(a=`1940sGenres`[1:10,'V1'])
c(`1940sGenres`[1:10,'V1'])
(`1940sGenres`[1:10,'V1']
)
append(`1940sGenres`[1:10,'V1'])
append(`1940sGenres`[1:10,'V1'],`1940sGenres`[1:10,'V1'])
`1940sGenres`[1:10,'V1']
as.character(`1940sGenres`[1:10,'V1'])
c(as.character(`1940sGenres`[1:10,'V1']))
`1940sArtist` <- read.csv("C:/wamp/www/viz/project3/app/data/artistsByDecade/1940sArtist.csv", stringsAsFactors=FALSE)
View(`1940sArtist`)
`1940sGenres` <- read.csv("C:/wamp/www/viz/project3/app/data/genresByDecade/1940sGenres.csv", header=FALSE,stringsAsFactors=FALSE)
`1950sGenres` <- read.csv("C:/wamp/www/viz/project3/app/data/genresByDecade/1950sGenres.csv", header=FALSE,stringsAsFactors=FALSE)
`1960sGenres` <- read.csv("C:/wamp/www/viz/project3/app/data/genresByDecade/1960sGenres.csv", header=FALSE,stringsAsFactors=FALSE)
`1970sGenres` <- read.csv("C:/wamp/www/viz/project3/app/data/genresByDecade/1970sGenres.csv", header=FALSE,stringsAsFactors=FALSE)
`1980sGenres` <- read.csv("C:/wamp/www/viz/project3/app/data/genresByDecade/1980sGenres.csv", header=FALSE,stringsAsFactors=FALSE)
`1990sGenres` <- read.csv("C:/wamp/www/viz/project3/app/data/genresByDecade/1990sGenres.csv", header=FALSE,stringsAsFactors=FALSE)
`2000sGenres` <- read.csv("C:/wamp/www/viz/project3/app/data/genresByDecade/2000sGenres.csv", header=FALSE,stringsAsFactors=FALSE)
unique(c(`1940sGenres`[1:10,'V1'],`1950sGenres`[1:10,'V1'],`1960sGenres`[1:10,'V1'],`1970sGenres`[1:10,'V1'],`1980sGenres`[1:10,'V1'],`1990sGenres`[1:10,'V1'],`2000sGenres`[1:10,'V1']))
singleString <- paste(readLines("../data/genresStaticData.js"), collapse=" ")
json=strsplit(singleString,'=')[[1]][2]
obj <- fromJSON(json)
singleString <- paste(readLines("../data/genresStaticData.js"), collapse=" ")
json=strsplit(singleString,'=')[[1]][2]
obj <- fromJSON(json)
gsub(json,"'","")
json=gsub(json,"'","")
singleString <- paste(readLines("../data/genresStaticData.js"), collapse=" ")
json=strsplit(singleString,'=')[[1]][2]
json
obj <- fromJSON(json)
singleString <- paste(readLines("../data/artistsStaticData.js"), collapse=" ")
json=strsplit(singleString,'=')[[1]][2]
json
singleString <- paste(readLines("../data/genresStaticData.js"), collapse=" ")
json=strsplit(singleString,'=')[[1]][2]
obj <- fromJSON(json)
print(obj)
map <- new.env(hash=T, parent=emptyenv())#set hashmap of genres
for(i in 1:length(obj)){
if(is.null(map[[obj[[i]]$date]])){
map[[obj[[i]]$date]] = as.numeric(obj[[i]]$value)
}else{
map[[obj[[i]]$date]] = map[[obj[[i]]$date]] + as.numeric(obj[[i]]$value)
}
}
for(i in 1:length(obj)){
obj[[i]]$value =as.numeric(obj[[i]]$value)/map[[obj[[i]]$date]]*100
}
a<-toJSON(obj)
write(a, "test.json")
singleString <- paste(readLines("../data/allArtistsStaticData.js"), collapse=" ")
singleString <- paste(readLines("../data/allArtistsStaticData.js"), collapse=" ")
json=strsplit(singleString,'=')[[1]][2]
obj <- fromJSON(json)
print(obj)
map <- new.env(hash=T, parent=emptyenv())#set hashmap of genres
for(i in 1:length(obj)){
if(is.null(map[[obj[[i]]$year]])){
map[[obj[[i]]$year]] = as.numeric(obj[[i]]$value)
}else{
map[[obj[[i]]$year]] = map[[obj[[i]]$year]] + as.numeric(obj[[i]]$value)
}
}
obj[[i]]
obj[[1]]
for a in obj
for (a in obj){}
a
i$year
i
a
a$year
a[[1]]$year
map <- new.env(hash=T, parent=emptyenv())#set hashmap of genres
for(i in obj){
if(is.null(map[[i[[1]]$year]])){
map[[i[[1]]$year]] = as.numeric(i[[1]]$value)
}else{
map[[i[[1]]$year]] = map[[i[[1]]$year]] + as.numeric(i[[1]]$value)
}
}
i
if(is.null(map[[i[[1]]$year]])){
]
is.null(map[[i[[1]]$year]])
i[[1]]$year
map[[i[[1]]$year]]
map[[as.character(i[[1]]$year)]]
map <- new.env(hash=T, parent=emptyenv())#set hashmap of genres
for(i in obj){
if(is.null(map[[as.character(i[[1]]$year)]])){
map[[as.character(i[[1]]$year)]] = as.numeric(i[[1]]$value)
}else{
map[[as.character(i[[1]]$year)]] = map[[as.character(i[[1]]$year)]] + as.numeric(i[[1]]$value)
}
}
print(as.list(map))
for(i in obj){
i[[1]]$value =as.numeric(i[[1]]$value)/map[[as.character(i[[1]]$year)]]*100
}
print(obj)
a<-toJSON(obj)
write(a, "test.json")
singleString <- paste(readLines("../data/genresStaticData.js"), collapse=" ")
json=strsplit(singleString,'=')[[1]][2]
obj <- fromJSON(json)
map <- new.env(hash=T, parent=emptyenv())#set hashmap of genres
for(i in 1:length(obj)){
if(is.null(map[[obj[[i]]$date]])){
map[[obj[[i]]$date]] = as.numeric(obj[[i]]$value)
}else{
map[[obj[[i]]$date]] = map[[obj[[i]]$date]] + as.numeric(obj[[i]]$value)
}
}
for(i in 1:length(obj)){
obj[[i]]$value =as.numeric(obj[[i]]$value)/map[[obj[[i]]$date]]*100
}
map <- new.env(hash=T, parent=emptyenv())#set hashmap of genres
for(i in 1:length(obj)){
if(is.null(map[[obj[[i]]$date]])){
map[[obj[[i]]$date]] = as.numeric(obj[[i]]$value)
}else{
map[[obj[[i]]$date]] = map[[obj[[i]]$date]] + as.numeric(obj[[i]]$value)
}
}
print(as.list(map))
`2014artist` <- read.csv("C:/wamp/www/viz/project3/app/data/artistsByYear/2014artist.csv")
View(`2014artist`)
`2010artist` <- read.csv("C:/wamp/www/viz/project3/app/data/artistsByYear/2010artist.csv")
View(`2010artist`)
`2010Genres` <- read.csv("C:/wamp/www/viz/project3/app/data/genresByYear/2010Genres.csv", header=FALSE)
View(`2010Genres`)
`2010Genres`[order(V2),]
`2010Genres`[order('V2'),]
`2010Genres`[,order('V2')]
a<-`2010Genres`[,order('V2')]
a<-`2010Genres`[,order(-'V2')]
a<-`2010Genres`[,order(-V2)]
a<-`2010Genres`[order(-V2),]
a<-`2010Genres`[order(- `2010Genres`$V2),]
View(a)
`1960sArtist` <- read.csv("C:/wamp/www/viz/project3/app/data/artistsByDecade/1960sArtist.csv")
View(`1960sArtist`)
